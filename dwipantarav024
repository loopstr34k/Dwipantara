#!/bin/bash
#!/data/data/com.termux/files/usr/bin/bash
# v 0.2.4

# v 0.2.4

#Warna // Color
blue='\e[0;34m'
cyan='\e[0;36m'
okegreen='\033[92m'
lightgreen='\e[1;32m'
white='\e[1;37m'
red='\e[1;31m'
yellow='\e[1;33m'
clear
check() {
    echo "Check Requires"
    echo ""
    which wget > /dev/null 2>&1
    if [ "$?" -eq "0" ]; then
    echo "Wget Installed"
    else
    echo "Wget Not Installed"
    case $( uname -o ) in
    GNU/Linux)
    echo -e "${yellow}Installing Wget for PC"
    apt-get install wget -y;;
    Android)
    echo -e "${yellow}Installing Wgt for Termux"
    pkg install wget -y;;
    esac
    echo -e $okegreen "Done installing Wget"
    fi

    which curl > /dev/nul 2>&1
    if [ "$?" -eq "0" ]; then
    echo -e $okegreen "Curl Installed"
    sleep 0.5
    else
    echo -e $red "Curl Not Installed"
    case $( uname -o ) in
    GNU/Linux)
    echo -e "${yellow}Installing Curl for PC"
    apt-get install curl -y;;
    Android)
    echo -e "${yellow}Installing Curl for Termux"
    pkg install curl -y;;
    esac
    fi
}
check
down() {
    sp='/-\|'
    printf ' '
    while true; do
        printf '\b%.1s' "$sp"
        sp=${sp#?}${sp%???}
        sleep 0.05
    done
}
load()
{
    bar="##################################################"
    barlength=${#bar}
    n=$(($1*barlength/100))
    printf "\r[%-${barlength}s (%d%%)] " "${bar:0:n}" "$1"
}
down &
pid=$!

for i in `seq 1 100`;
do
    load $i
    sleep 0.01
done

kill $pid > /dev/null 2>&1
sleep 2
clear
echo " Starting tool at `date`"
echo -e "$yellow Execute Command 'help' or '?' $white"
contact() {
clear
echo " "
echo -e $red      "         [ Contact Author ]"
echo " "
echo -e $okegreen "     Author 1   ▶    MR.R3DH3T"
echo -e $okegreen "     Instagram  ▶    naufalziidane_"
echo -e $red      "------------------------------------------------"
echo -e $lightgreen     "     Author 2   ▶    LOOPSTR34K"
echo -e $lightgreen     "     Instagram  ▶    loopstr34k $white"
echo ""
}
help()
{
 ?
echo ""
echo -e "$yellow If You Confused, You can Contact author"
echo -e " With Execute Command 'contact' $white"
}
r(){
    echo -e "$red The Fat Rat   |   Evil Droid   |   Wifijammer   |   RouterSploit   |"
    echo -e "$red   Joomscan    |   Netattack2   |   Wifipisher   |      Wifigod     |"
    echo -e "$red      PTF      |         C  O  O  M  I  N  G      S  O  O  N        |$white"
    echo ""
}
y(){
    echo -e "$yellow |       C   O   M   I   N   G       S   O   O   N       |$white"
}
g(){
    echo -e "$okegreen Metasploit   |   Hammer       |   Xerxes   |   SQLMap      |"
    echo -e "$okegreen CMSmap       |   Ngrok        |   Webdav   |   Venom       |"
    echo -e "$okegreen RedHawk      |   Hasher       |   Weeman   |   Websploit   |"
    echo -e "$okegreen Mercury      |   Fsociety     |   TrackIP  |   Instagram   |"
    echo -e "$okegreen Userrecon    |   Hydra        |   Nmap     |   WPScan      |"
    echo -e "$okegreen TheHarvester |   Pybelt       |   SQLiv    |   Darksploit  |"
    echo -e "$okegreen Dirsearch    |   Black Widow  |   C O M I N G    S O O N   |$white"
    echo ""
}
version() {
clear
echo -e "$blue Version Tool is 0.2.4 $white"
}
function thefatrat(){
for install in $string;do
     $install
done;
clear
echo -e "$blue [ Installing The Fat Rat ] $white"
git clone https://github.com/Screetsec/TheFatRat.git
cd TheFatRat
chmod +x setup.sh && ./setup.sh
exit
}
function evildroid(){
for install in $string;do
     $install
done;
echo -e $okegreen"[ Installing Evil - Droid ]"
echo -e $red"[!]  Generate Payload For Backdoor Android  [!] $white"
git clone https://github.com/M4sc3r4n0/Evil-Droid.git
cd Evil-Droid
chmod +x evil-droid
exit
}
function wifijammer() {
for install in $string;do
     $install
done;
clear
echo -e $blue"[ Installing Wifi Jammer ] $white"
git clone https://github.com/DanMcInerney/wifijammer.git
cd wifijammer
chmod +x wifijammer
exit
}
function routersploit(){
for install in $string;do
     $install
done;
echo "$blue [ Installing RouterSploit ] $white"
apt-get install python3-pip
git clone https://www.github.com/threat9/routersploit.git
cd routersploit
python3 -m pip install -r requirements.txt
echo -e "${okegreen} Use Python3 if you run Routersploit $white"
echo ""
exit
}
function joomscan(){
for install in $string;do
     $install
done;
echo -e $blue" [ Installing Joomscan ] $white"
apt-get update 
apt-get install perl 
git clone https://github.com/rezasp/joomscan.git
cd joomscan
chmod a+x *.pl
echo -e "${okegreen} Execute Command perl joomscan.pl $white"
echo ""
exit
}
function netattack2(){
for install in $string;do
     $nstall
done;
clear
echo -e "$blue [ Installing Netattack2 ] $white"
git clone https://github.com/wi-fi-analyzer/netattack2.git
cd netattack2
apt-get install nmap python-argparse python-scapy iw -y
chmod a+x *.py
exit
}
function wifipisher(){
for install in $string;do
     $install
done;
clear
echo -e $blue" [ Installing Wifiphisher ] $white"
https://github.com/wifiphisher/wifiphisher.git
cd wifiphisher
chmod a+x *.py
sudo python setup.py install
exit
}
function wifigod(){
for install in $string;do
     $install
done;
clear
echo -e $blue" [ Installing Wifigod ] $white"
git clone https://github.com/blackholesec/wifigod.git
cd wifigod
chmod a+x *.py
echo ""
exit
}
function ptf(){
for install in $string;do
     $install
done;
clear
echo -e "${blue} [ Installing PTF ] $white"
git clone https://github.com/trustedsec/ptf.git
cd ptf
chmod a+x ptf
echo ""
echo -e "${okegreen} Run Main Tools : ./ptf $white"
echo ""
exit
}
function ngrok()
{
for install in $string;do
     $install
done;
clear
echo -e $red" [ Installing Ngrok ] $white"
mkdir ngrok
cd ngrok
echo -e "${red} (1) 32 bit"
echo -e "${red} (2) 64 bit"
echo -e "${red} (3) ARM "
read -p " root@dwipantara#~/ngrok-installer/ " ngrok;
  if [ $ngrok = 1 ] || [ $ngrok = 01 ]
  then
  echo -e $yellow"Download Ngrok 32 bit $white"
  wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-386.zip
  unzip ngrok-stable-linux-386.zip
  echo -e $yellow"Use Command './ngrok http 80' to use Ngrok"
  echo -e "e.g: root@dwipantara#~/ ngrok http 80 $white"
  exit
  fi
  if [ $ngrok = 2 ] || [ $ngrok = 02 ]
  then
  echo -e $yellow"Download Ngrok 64 bit $white"
  wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
  unzip ngrok-stable-linux-amd64.zip
  echo -e $yellow"Use Command './ngrok http 80' to use Ngrok"
  echo -e $yellow"e.g: root@dwipantara#~/ ngrok http 80 $white"
  exit
  fi
  if [ $ngrok = 3 ] || [ $ngrok = 03 ]
  then
  echo -e $yellow"Download Ngrok ARM $white"
  wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-arm.zip
  unzip ngrok-stable-linux-arm.zip
  echo -e $yellow"Use Command './ngrok http 80' to use Ngrok"
  echo -e "e.g: root@dwipantara#~/ ngrok http 80 $white"
  exit
  fi
}
function metasploit(){
for install in $string;do
     $install
done;
echo -e $blue" [ Installing Metasploit ] "
sleep 3
apt install curl -y
curl -LO https://raw.githubusercontent.com/Hax4us/Metasploit_termux/master/metasploit.sh
sleep 1
chmod +x metasploit.sh
./metasploit.sh
sleep 5
mv metasploit-framework $HOME
echo -e "${okegreen} Execute Command 'msfconsole' to run metasploit $white"
exit
}
function hammer(){
for install in $string;do
     $install
done;
echo -e $blue" [ Installing Hammer ] $white"
git clone https://github.com/cyweb/hammer.git
cd hammer
chmod +x hammer.py
exit
}
function xerxes(){
for install in $string;do
     $install
done;
echo -e $blue" [ Installing Xerxes ] "
echo -e "${yellow}Installing Clang for Xerxes ${red}[ ! ] $white"
function insclang ()
{
     case $( uname -o ) in
     GNU/Linux)
     apt-get install clang -y
     echo -e "${okegreen}Finish";;
     Android)
     pkg install clang -y
     echo -e "${okegreen}Finish";;
     esac
     
}
insclang
echo -e $yellow "  [i]  Downloading Xerxes!  [i] $white"
echo ""
git clone https://github.com/zanyarjamal/xerxes.git
cd xerxes
gcc xerxes.c -o xerxes
exit
}
function sqlmap(){
for install in $string;do
     $install
done;
echo -e $blue" [ Installing SQLmap-dev ] $white"
git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap-dev
cd sqlmap-dev
chmod +x *.py
exit
}
function redhawk(){
for install in $string;do
     $install
done;
clear
echo -e $blue" [ Installing RED_HAWK ] "
sleep 2
echo " "
echo -e "${blue}Installing Requirement RED_HAWK $white"
function instphp()
{
     case $( uname -o ) in
     Android)
     pkg install php -y;;
     GNU/Linux)
     apt-get install php -y;;
     esac
}
instphp
git clone https://github.com/Tuhinshubhra/RED_HAWK
cd RED_HAWK
chmod +x *.php
}
function hasher(){
for install in $string;do
     $install
done;
echo -e $blue" [ Installing hasher ] $white"
git clone https://github.com/CiKu370/hasher.git
cd hasher
chmod +x hash.py
exit
}
function weeman(){
for install in $string;do
     $install
done;
clear
echo -e "${yellow}Installing Requirements Weeman $white"
function reqweeman()
{
       
       case $( uname -o ) in
       Android)
       pip2 install beautifulsoup
       pip2 install bs4;;
       GNU/Linux)
       pip install beutifulsoup
       pip install bs4;;
       esac     
}
reqweeman
sleep 1
echo -e $blue" [ Installing Weeman ] $white"
git clone https://github.com/samyoyo/weeman
cd weeman
chmod +x weeman.py
exit
}
function websploit(){
for install in $string;do
     $install
done;
clear
echo -e $blue"   [ Instaling websploit ] $white"
function webreq()
{
   case $( uname -o ) in
   Android)
   pip2 install request
   pip2 install requests
   pip2 install scapy
   pip2 install --upgrade pip;;
   GNU/Linux)
   pip install request
   pip install scapy
   pip install requests;;
   esac
}
webreq
git clone https://github.com/websploit/websploit.git
cd websploit
chmod +x websploit
sleep 0.6
exit
}
function mercury(){
for install in $string;do
     $install
done;
clear
echo -e $blue" [ Installing Mercury ] $white"
git clone https://github.com/MetaChar/Mercury.git
cd Mercury
chmod +x Mercury.py
function reqMer()
{
  case $(uname -o) in
  Android)
  cd Mercury
  pip2 install -r rerquirements.txt;;
  GNU/Linux)
  cd Mercury
  pip install -r requirements.txt;;
  esac
}
reqMer
echo -e $red" use python2 and python for run Mercury Tools"
echo -e $yellow"       └>termux   └> GNU/Linux (PC) $white"
echo  " "
exit
}
function fsociety(){
for install in $string;do
     $install
done;
echo -e $blue" [ Installing fsociety ] $white"
git clone https://github.com/manisso/fsociety
cd fsociety
chmod +x *.py
echo ""
exit
}
function trackip(){
for install in $string;do
     $install
done;
echo -e $blue" [ Installing IPGeolocation ] $white"
git clone https://github.com/maldevel/IPGeolocation.git
cd IPGeolocation
chmod +x *.py
exit
}
function instagram(){
for install in $string;do
     $install
done;
clear
echo -e $blue" [ Installing Instagram ] $white"
git clone https://github.com/Pure-L0G1C/Instagram.git
cd Instagram
chmod +x *.py
function bruteig()
{
   case $( uname -o ) in
   GNU/Linux)
   pip install -r requirements.txt;;
   Android)
   pip2 install -r requirements.txt;;
   esac
}
bruteig
echo -e "${okegreen} python instagram.py <username> <wordlis> <threads> $white"
echo ""
}
function userrecon(){
for install in $string;do
     $install
done;
clear
echo -e "${blue}[ Installing User Recon ] $white"
git clone https://github.com/thelinuxchoice/userrecon.git
cd userrecon
chmod +x userrecon.sh
exit
}
function hydra(){
for install in $string;do
     $install
done;
clear
echo -e $blue"[ Installing Hydra ] $white"
apt install update && apt upgrade
apt install hydra 
echo ""
echo ""
wget http://scrapmaker.com/download/data/wordlists/dictionaries/rockyou.txt
echo -e $okegreen" use hydra -h for help "
echo ""
echo -e $okegreen" This for ssh admin or root { e.g } hydra -t 4 127.0.0.1 ssh -l username -P wordlist.txt -s 22 -vV $white"
}
function nmap(){
for install in $string;do
     $install
done;
clear
echo -e $blue"[ Installing Nmap ] $white"
apt update && apt upgrade
apt install nmap
echo ""
sleep 2
echo ""
echo -e ${okegreen}" { e.g } nmap 127.1.0.0 -sV $white"
echo ""
}
function wpscan(){
for install in $string;do
     $install
done;
clear
echo -e $blue" [ Installing WPscan ] $white"
git clone https://github.com/wpscanteam/wpscan.git
cd wpscan
echo ""
echo -e $red" ALERT! Don't close . $white"
sleep 4
gem install bundle
bundle install config build.nokogiri --use-system-libraries
gem install wpscan
bundle install && rake install 
echo -e ${okegreen}" { e.g } wpscan -h "
echo ""
echo -e ${okegreen}" { e.g } wpscan --url http://kapanlobisa.co.id --enumerate u "
echo ""
sleep 2
echo -e ${okegreen}" { e.g } wpscan --url http://kapanlobisa.co.id --wordlist wordlist.txt --username input admin wordpress $white"
sleep 2
echo ""
exit
}
function theharvester(){
for install in $string;do
     $install
done;
clear
echo -e $blue" [ Installing Theharvester ] $white"
git clone https://github.com/laramies/theHarvester.git
sleep 2
cd theHarvester
chmod +x *.py
exit
}
function pybelt(){
for install in $string;do
     $install
done;
clear
echo -e $blue" [ Installing Pybelt ] $white"
echo ""
git clone https://github.com/Ekultek/Pybelt.git
function belt()
{
   case $( uname -o ) in
   GNU/Linux)
   cd Pybelt
   pip install -r requirements.txt;;
   Android)
   apt update
   cd Pybelt
   pip2 install -r requirements.txt;;
   esac
}
belt
sleep 3
echo -e "${okegreen} Use python2 or python pybelt.py "
echo -e "${yellow}      └> termux  └> GNU/Linux PC $white"
echo ""
}
function sqliv(){
for install in $string;do
     $install
done;
echo -e "$yellow [ Installing SQLiv ] $white"
echo ""
git clone https://github.com/the-robot/sqliv.git
sleep 1
case $( uname -o ) in
    Android)
    cd sqliv
    pip2 install requirements.txt;;
    GNU/Linux)
    cd sqliv
    python setup.py install
    pip install requirements.txt;;
esac
}
function darksploit(){
for install in $string;do
     $install
done;
clear
echo -e "${blue} [ Installing DarkSploit ] $white"
git clone https://github.com/anthrax3/DarkSploit.git
sleep 1.5
function darkpo()
{
    case $( uname -o ) in
    Android)
    cd DarksSploit/Install
    chmod +x installtermux.sh
    sh installtermux.sh
    pip2 install -r requirements.txt
    echo -e "${okegreen} Done Install Requirements DarkSploit Termux $white";;
    GNU/Linux)
    cd DarkSploit/Install
    chmod +x installgnuroot.sh
    sh installgnuroot.sh
    pip install -r requirements.txt
    echo -e "${okegreen} Done Install Requirements DarkSploit $white";;
    esac
}
darkpo
echo ""
}
function dirsearch(){
for install in $string;do
     $install
done;
clear
echo -e $blue" [ Installing Dirserach ] $white"
apt update 
git clone https://github.com/maurosoria/dirsearch.git
cd dirsearch
chmod a+x *.py
echo ""
exit
}
function blackwidow(){
for install in $string;do
     $install
done;
git clone https://github.com/1N3/BlackWidow.git
cd BlackWidow
chmod +x *.*
exit
}
show_tool(){
clear
echo -e "${red}Red Lists For Linux PC ─> Execute Command 'r' $white"
echo -e "${yellow}Yellow Lists For Android ─>  Execute Command 'y' $white"
echo -e "${okegreen}Green Lists For All Device ─> Execute Command 'g' $white"
while true; do
read -p " Dwipantara : Show Tool > " st;
if [ $st = r ] || [ $st = R ]
    then
    clear
    r
fi
if [ $st = y ] || [ $st = Y ]
    then
    clear
    y
fi
if [ $st = g ] || [ $st = G ]
    then
    clear
    g
fi
if [ $st = back ]
    then
    source dwipantarav024
fi
done
}
function reload(){
    curl -O https://raw.githubusercontent.com/loopstr34k/Dwipantara/master/dwipantarav024
    curl -O https://raw.githubusercontent.com/loopstr34k/Dwipantara/master/update.sh
    sleep 1
    source dwipantarav024
}
function ?()
{
clear
echo -e "$yellow      Command :
                 install     : For Download tool in list by name
                                   e.g install <tool name>
                                   install dwipantara
                 help        : Help Commands
                 ?           : Help Commands
                 version     : Version Dwipantara Tool
                 show_tool   : list tool
                 contact     : Contact Author 
                 reload      : Reload Script
                 back        : Return to Main Menu (in show_tool)$white"
}
function install()
{
for arguments in $int;do
     $arguments
done;
}
function argument(){
read -p " Dwipantara : > " dwipantara;
for i in $dwipantara;do
     $i
done;
}
while :
do
argument $dwipantara
done

